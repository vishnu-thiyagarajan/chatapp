{"version":3,"sources":["components/hooks/useForm/index.js","components/Join.js","components/Chat.js","App.js","serviceWorker.js","index.js"],"names":["useForm","callback","initialValue","validate","useState","values","setValues","errors","setErrors","isSubmitting","setIsSubmitting","useEffect","Object","keys","length","event","target","name","value","preventDefault","Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","Join","classes","redirect","setRedirect","room","err","handleChange","handleSubmit","to","Container","component","maxWidth","CssBaseline","className","Avatar","noValidate","TextField","error","helperText","onChange","required","fullWidth","id","label","autoComplete","autoFocus","type","Button","onClick","Grid","container","Box","mt","socket","root","height","overflowY","card","marginBottom","content","padding","paddingBottom","overflowWrap","Chat","location","messagesEndRef","useRef","scrollToBottom","current","scrollIntoView","behavior","setName","setRoom","message","setMessage","messages","setMessages","queryString","parse","search","io","process","emit","alert","off","on","sendMessage","item","xs","justify","gutterBottom","style","Card","elevation","CardContent","GridList","map","msg","index","GridListTile","cols","key","user","trim","toLowerCase","ReactEmoji","emojify","text","ref","placeholder","resize","onKeyPress","endIcon","App","path","exact","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.2ceb9aca.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst useForm = (callback, initialValue, validate) => {\n  const [values, setValues] = useState(initialValue);\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const reset = () => {\n    setValues(initialValue);\n    setErrors({})\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    setValues({\n      ...values,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setErrors(validate(values));\n    setIsSubmitting(true);\n  };\n\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      callback();\n    }\n  }, [errors, callback, isSubmitting]);\n\n  return [\n    handleChange,\n    handleSubmit,\n    values,\n    errors,\n    reset\n  ];\n};\n\nexport default useForm;","import React,{useState} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport useForm from './hooks/useForm';\nimport {Redirect} from 'react-router-dom';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright Â© '}\n      <Link color=\"inherit\" href=\"http://tvishnu.netlify.app/\">\n        Vishnu T\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function Join() {\n  const classes = useStyles();\n  const [redirect, setRedirect] = useState(false);\n  const onSubmit = ()=>setRedirect(true);\n  const validation = (values)=>{\n      let err = {} \n      if (values.name && values.room) return err\n      if (!values.name) err.name = \"Name is required\"\n      if (!values.room) err.room = \"Room is required\"\n      return err\n  }\n  const [handleChange, handleSubmit, values, errors] = useForm(onSubmit, {name: '', room: ''}, validation)\n  if (redirect) {\n    return <Redirect to={`/chat?name=${values.name}&room=${values.room}`} />\n  }\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <AddCircleOutlineIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Join\n        </Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            value={values.name}\n            error={!!errors.name}\n            helperText={errors.name}\n            onChange={handleChange}\n            required\n            fullWidth\n            id=\"name\"\n            label=\"Name\"\n            name=\"name\"\n            autoComplete=\"name\"\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            value={values.room}\n            error={!!errors.room}\n            helperText={errors.room}\n            onChange={handleChange}\n            required\n            fullWidth\n            name=\"room\"\n            label=\"Room\"\n            type=\"room\"\n            id=\"room\"\n            autoComplete=\"current-room\"\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            onClick={handleSubmit}\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Join Room\n          </Button>\n          <Grid container>\n            {/* <Grid item xs>\n              <Link href=\"#\" variant=\"body2\">\n                Forgot room?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link href=\"#\" variant=\"body2\">\n                {\"Don't have an account?\"}\n              </Link>\n            </Grid> */}\n          </Grid>\n        </form>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}","import React,{useState, useEffect, useRef} from 'react';\nimport queryString from \"query-string\";\nimport io from 'socket.io-client';\nimport Button from '@material-ui/core/Button';\nimport SendIcon from '@material-ui/icons/Send';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CloseIcon from '@material-ui/icons/Close';\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport ReactEmoji from 'react-emoji';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(2),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n      },\n    root: {\n      height: '80vh',\n      overflowY: 'auto',\n    },\n    card:{\n        width: '100%',\n        marginBottom: '5px',\n    },\n    content: {\n        padding: '8px 8px 8px 8px',\n        '&:last-child': {\n            paddingBottom: '8px',\n        },\n        overflowWrap : \"break-word\",\n    },\n  }));\nlet socket;\nconst BACKEND_URI = process.env.REACT_APP_BACKEND_URI;\n\nfunction Chat({location}) {\n    const messagesEndRef = useRef(null)\n    const scrollToBottom = () => {\n        messagesEndRef.current.scrollIntoView({ behavior: \"smooth\" })\n    }\n    const classes = useStyles();\n    const [name, setName] = useState('')\n    const [room, setRoom] = useState('')\n    const [message, setMessage] = useState('')\n    const [messages, setMessages] = useState([])\n    useEffect(()=>{\n        const {name, room} = queryString.parse(location.search);\n        socket = io(BACKEND_URI);\n        setName(name)\n        setRoom(room)\n        socket.emit('join', {name, room},(error)=>{\n            if (error) alert(error)\n        })\n        return ()=>{\n            socket.emit('disconnect');\n            socket.off();\n        }\n    },[location.search])\n    useEffect(()=>{\n        socket.on('message', (message)=>{\n            setMessages([...messages, message])\n            scrollToBottom()\n        })\n    },[messages])\n    const sendMessage = (event) => {\n        event.preventDefault();\n        if(message) {\n          socket.emit('sendMessage', message, () => {\n            setMessage('')\n            scrollToBottom()\n          });\n        }\n    }\n  return (\n    <>\n    <Container component=\"main\" maxWidth=\"xs\">\n    <CssBaseline />\n    <div className={classes.paper}>\n      <Grid container item xs={12} justify=\"center\" alignItems=\"center\" spacing={0}>\n        <Grid item xs={12}>\n            <Grid container item xs={12}>\n                <Grid item xs>\n                    <Typography variant=\"h4\" color=\"textPrimary\" gutterBottom>\n                    <FiberManualRecordIcon style={{color:'green'}}/>Room : {room}\n                    </Typography>\n                </Grid>\n                <Grid align=\"right\" item xs={1}>\n                <a href='/'><CloseIcon/></a>\n                </Grid>\n            </Grid>\n            <Card className={classes.root} elevation={20}>\n                <CardContent className={classes.content}>\n                    <GridList>\n                    {messages.map((msg,index) => (\n                        <GridListTile cols={2} style={{ height: 'auto' }} key={index}>\n                            <Card className={classes.card} elevation={20}>\n                                <CardContent className={classes.content}>\n                                    <Typography align={msg.user === name.trim().toLowerCase()? \"right\" : \"left\"} variant=\"body1\" component=\"p\" color=\"textSecondary\" gutterBottom>\n                                    {msg.user}\n                                    </Typography>\n                                    <Typography align={msg.user === name.trim().toLowerCase()? \"right\" : \"left\"} variant=\"body2\" component=\"p\">\n                                    {ReactEmoji.emojify(msg.text)}\n                                    </Typography>\n                                </CardContent>\n                            </Card>\n                        </GridListTile>\n                    ))}\n                    <GridListTile cols={2} style={{ height: 'auto' }} ref={messagesEndRef} />\n                    </GridList>\n                </CardContent>\n            </Card>\n        </Grid>\n      </Grid>  \n      <Grid container item xs={12} justify=\"center\" alignItems=\"center\" spacing={0}>\n          <Grid item xs={9}>\n            <textarea\n                autoFocus\n                placeholder=\"Type a message...\"\n                style={{resize: 'none', width: '100%'}} \n                value={message} \n                onChange={(event)=>setMessage(event.target.value)} \n                onKeyPress={(event)=> event.key === 'Enter' ? sendMessage(event): null } />\n          </Grid>\n          <Grid item xs={3}>\n            <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={sendMessage}\n                endIcon={<SendIcon />}\n                >\n                Send\n            </Button>\n          </Grid>\n      </Grid>\n      </div>\n      </Container>\n    </>\n  );\n}\n\nexport default Chat;\n","import React from 'react';\nimport './App.css';\nimport {BrowserRouter as Router, Route } from 'react-router-dom';\nimport Join from './components/Join';\nimport Chat from './components/Chat';\n\nfunction App() {\n  return (\n    <Router>\n      <Route path=\"/\" exact component={Join} />\n      <Route path=\"/chat\" exact component={Chat} />\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}